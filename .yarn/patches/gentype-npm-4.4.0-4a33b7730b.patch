diff --git a/postinstall.js b/postinstall.js
index 2c29d18ffd10c9d356ef98ac976efe6321fc5c06..01926e691e40d9af30e6e2881f2be68ac201fd6e 100644
--- a/postinstall.js
+++ b/postinstall.js
@@ -1,35 +1,42 @@
-var path = require("path");
-var fs = require("fs");
+var path = require('path');
+var fs = require('fs');
 var platform = process.platform;
 
 /* We always use the .exe extension, no matter if unix / win32 */
-const targetPath = path.join(__dirname, "gentype.exe");
+const targetPath = path.join(__dirname, 'gentype.exe');
 
 function fail(msg) {
-    console.warn(msg);
-    process.exit(1);
+  console.warn(msg);
+  process.exit(1);
 }
 
 function getPlatformBinaryPath(platform) {
-  return path.join(__dirname, "vendor-" + platform, "gentype.exe");
+  return path.join(__dirname, 'vendor-' + platform, 'gentype.exe');
 }
 
 function movePlatformBinary(platform) {
   const sourcePath = getPlatformBinaryPath(platform);
 
-  if(!fs.existsSync(sourcePath)) {
-      return fail("error: executable not found: " + sourcePath);
+  if (fs.existsSync(sourcePath)) {
+    fs.renameSync(sourcePath, targetPath);
+    fs.chmodSync(targetPath, 0777);
+    return;
+  }
+
+  if (fs.existsSync(targetPath)) {
+    const text = fs.readFileSync(targetPath, { encoding: 'utf8' });
+    if (/gentype was not installed correctly/.test(text)) {
+      return fail('error: executable not found: ' + sourcePath);
+    }
   }
-  fs.renameSync(sourcePath, targetPath);
-  fs.chmodSync(targetPath, 0777);
 }
 
 switch (platform) {
-  case "win32":
-  case "linux":
-  case "darwin":
+  case 'win32':
+  case 'linux':
+  case 'darwin':
     movePlatformBinary(platform);
     break;
   default:
-    fail("error: no release built for the " + platform + " platform");
+    fail('error: no release built for the ' + platform + ' platform');
 }
